QUESTIONID,FORMAT,DIFFICULTY,TOPIC,QUESTION,CHOICES,ANSWER,TOTALSCORE
Q001,MCQ,INTERMEDIATE,Arrays,What is the time complexity of accessing an element in an array?,A. O(1);B. O(n);C. O(log n);D. O(n^2),A,10
Q002,MCQ,EASY,Arrays,Which statement is true about arrays in C++?,A. Arrays can only store elements of the same data type;B. Arrays automatically resize when elements are added;C. Elements in an array cannot be accessed randomly;D. Arrays cannot be passed to functions by value or reference,A,5
Q003,TrueFalse,INTERMEDIATE,Arrays,In C++ the size of an array must be known at compile time.,,FALSE,10
Q004,MCQ,EASY,Arrays,What is the index of the first element in an array of size n in C++?,A. 0;B. 1;C. -1;D. n,A,5
Q005,FillinTheBlank,INTERMEDIATE,Arrays,In C++ to declare an array of integers named 'arr' with 5 elements we use the syntax int ______[5];,,arr,10
Q006,MultipleCorrect,HARD,Arrays,Which statements about multidimensional arrays are true?,A. Multidimensional arrays in C++ can have more than two dimensions;B. The elements in a multidimensional array are stored in a contiguous block of memory;C. The size of each dimension in a multidimensional array must be specified when declaring the array;D. Multidimensional arrays cannot be initialized at the time of declaration,A;B;C,15
Q007,MCQ,EASY,Arrays,Which data structure is typically used to implement arrays in C++?,A. Linked list;B. Array;C. Stack;D. Queue,B,5
Q008,FillinTheBlank,HARD,Arrays,In C++ the number of elements in a static array cannot be changed after its declaration because arrays are _______.,,fixed-size,15
Q009,MCQ,EASY,Arrays,What is the maximum number of dimensions an array can have in C++?,A. 1;B. 2;C. 3;D. There is no maximum,B,5
Q010,TrueFalse,INTERMEDIATE,Arrays,In C++ an array variable holds the memory address of the first element of the array.,,TRUE,10
Q011,MCQ,HARD,Arrays,What is the time complexity of deleting an element from an array in the worst case?,A. O(1);B. O(log n);C. O(n);D. O(n^2),C,15
Q012,FillinTheBlank,INTERMEDIATE,Arrays,In C++ to access the third element of an array named 'arr' we use the syntax arr[______].,,2,10
Q013,MultipleCorrect,HARD,Arrays,Which statements are advantages of using arrays in C++?,A. Arrays allow for random access to elements;B. Arrays are suitable for storing large amounts of data;C. Arrays are flexible and can be resized dynamically;D. Arrays have a fixed size and cannot grow or shrink,A;B,15
Q014,MCQ,INTERMEDIATE,Arrays,What is the time complexity of searching for an element in an unsorted array of size n in the worst case using linear search?,A. O(1);B. O(log n);C. O(n);D. O(n^2),C,10
Q015,TrueFalse,EASY,Arrays,Arrays in C++ can contain elements of different data types.,,FALSE,5
Q016,MCQ,HARD,Arrays,What is the space complexity of creating a new array of size n in C++?,A. O(1);B. O(log n);C. O(n);D. O(n^2),C,15
Q017,FillinTheBlank,EASY,Arrays,In C++ to declare an array of characters named 'str' with a size of 50 elements we use the syntax char ______[50];,,str,5
Q018,MCQ,INTERMEDIATE,Arrays,Which statements about arrays are true in C++?,A. Arrays are always passed to functions by value;B. Arrays can store elements of different data types;C. Arrays have a fixed size determined at runtime;D. Arrays are always initialized with default values,A,10
Q019,TrueFalse,EASY,Arrays,In C++ array indices start from 1.,,FALSE,5
Q020,MCQ,INTERMEDIATE,Arrays,What is the time complexity of inserting an element at the end of an array in the worst case?,A. O(1);B. O(log n);C. O(n);D. O(n^2),A,10
Q021,TrueFalse,HARD,Arrays,In C++ arrays can be resized dynamically using the 'resize' function.,,FALSE,15
Q022,FillinTheBlank,EASY,Arrays,In C++ to declare an array of floating-point numbers named 'floatArray' with 10 elements we use the syntax float ______[10];,,floatArray,5
Q023,MCQ,INTERMEDIATE,Arrays,What is the time complexity of copying one array into another array of size n in C++?,A. O(1);B. O(log n);C. O(n);D. O(n^2),C,10
Q024,TrueFalse,HARD,Arrays,In C++ arrays can have a negative size if declared as a signed integer.,,FALSE,15
Q025,MultipleCorrect,INTERMEDIATE,Arrays,Which operations can be performed on arrays in C++?,A. Accessing elements by index;B. Inserting elements at arbitrary positions;C. Deleting elements from arbitrary positions;D. Resizing the array,A;C,10
Q026,MCQ,EASY,Class & Struct,Which statement is true about structures in C++?,A. Structures can have member functions;B. Structures cannot have member variables;C. Structures cannot have constructors;D. Structures are not user-defined types,A,5
Q027,FillinTheBlank,INTERMEDIATE,Class & Struct,In C++ to define a class named 'Person' with a member variable 'name' of type 'string' we use the syntax class ______ { string name; };,,Person,10
Q028,TrueFalse,INTERMEDIATE,Class & Struct,In C++ a class and a struct are essentially the same thing.,,TRUE,10
Q029,MCQ,EASY,Class & Struct,In C++ which keyword is used to declare a class?,A. class;B. struct;C. public;D. private,A,5
Q030,FillinTheBlank,INTERMEDIATE,Class & Struct,In C++ to define a constructor for a class named 'Car' we use the syntax Car::Car() { ______ },,Car,10
Q031,MultipleCorrect,HARD,Class & Struct,Which statements about classes and structs in C++ are true?,A. Classes have private access by default;B. Structs have public access by default;C. Classes can have member functions;D. Structs cannot have constructors,A;C,15
Q032,MCQ,EASY,Class & Struct,Which statement is true about access specifiers in C++ classes?,A. Access specifiers define the order in which members are initialized;B. Access specifiers determine the visibility of class members;C. Access specifiers are optional in class definitions;D. Access specifiers are used to define the size of class objects,B,5
Q033,TrueFalse,INTERMEDIATE,Class & Struct,In C++ private members of a class cannot be accessed by member functions of other instances of the same class.,,TRUE,10
Q034,MCQ,EASY,Class & Struct,In C++ which keyword is used to access the members of a class or struct from within the class itself?,A. self;B. this;C. current;D. itself,B,5
Q035,FillinTheBlank,HARD,Class & Struct,In C++ to declare a friend function named 'display' in a class named 'Rectangle' we use the syntax friend ______;,,display,15
Q036,MultipleCorrect,INTERMEDIATE,Class & Struct,Which characteristics are true for classes in C++?,A. Classes can have constructors;B. Classes can have member functions;C. Classes can have member variables;D. Classes cannot inherit from other classes,A;B;C,10
Q037,MCQ,EASY,Class & Struct,In C++ which keyword is used to inherit a class publicly?,A. extend;B. inheritance;C. public;D. inherit,C,5
Q038,TrueFalse,INTERMEDIATE,Class & Struct,In C++ classes support multiple inheritance.,,TRUE,10
Q039,MCQ,EASY,Class & Struct,In C++ which keyword is used to prevent inheritance of a class?,A. final;B. sealed;C. const;D. private,A,5
Q040,FillinTheBlank,HARD,Class & Struct,In C++ to define a destructor for a class named 'Book' we use the syntax Book::~Book() { ______ },,~Book,15
Q041,MCQ,EASY,Pointers,What is the value of a pointer in C++ if it has not been initialized?,A. NULL;B. 0;C. Undefined;D. Garbage value,B,5
Q042,FillinTheBlank,INTERMEDIATE,Pointers,In C++ to declare a pointer to an integer named 'ptr' we use the syntax int *______;,,ptr,10
Q043,TrueFalse,INTERMEDIATE,Pointers,In C++ pointers can only store memory addresses of variables of the same data type.,,TRUE,10
Q044,MCQ,EASY,Pointers,What is the size of a pointer in C++?,A. Depends on the data type it points to;B. 1 byte;C. 4 bytes;D. 8 bytes,C,5
Q045,FillinTheBlank,HARD,Pointers,In C++ to allocate memory for an array of 10 integers dynamically we use the syntax int *arr = new int[______];,,10,15
Q046,MultipleCorrect,INTERMEDIATE,Pointers,Which operations can be performed on pointers in C++?,A. Dereferencing;B. Pointer arithmetic;C. Comparing pointers with logical operators;D. Pointers can be resized,A;B;C,10
Q047,MCQ,EASY,Pointers,Which statement is true about pointers in C++?,A. Pointers cannot be assigned to NULL;B. Pointers cannot be passed to functions;C. Pointers can be used to allocate dynamic memory;D. Pointers have a fixed size,C,5
Q048,TrueFalse,INTERMEDIATE,Pointers,In C++ a pointer can be used to access the memory location of another pointer.,,TRUE,10
Q049,FillinTheBlank,EASY,Pointers,A ______  is a variable that stores the memory address of another variable.,,pointer,5
Q050,FillinTheBlank,HARD,Pointers,In C++ to deallocate memory assigned to a pointer named 'ptr' we use the syntax ______ ptr;,,delete,15
Q051,MCQ,EASY,Linked Lists,Which statement is true about linked lists?,A. Linked lists have a fixed size;B. Elements in a linked list are stored contiguously in memory;C. Linked lists support constant-time access to elements;D. Linked lists can easily insert or delete elements in the middle,A,5
Q052,FillinTheBlank,INTERMEDIATE,Linked Lists,In C++ to define a node structure for a singly linked list with an integer data field named 'data' and a pointer to the next node named 'next' we use the syntax struct Node { int data; ______* next; };,,Node,10
Q053,TrueFalse,INTERMEDIATE,Linked Lists,In C++ a circular linked list contains a cycle in its structure.,,TRUE,10
Q054,MCQ,EASY,Linked Lists,Which operations can be performed efficiently on a singly linked list?,A. Random access of elements;B. Insertion at the beginning;C. Deletion from the middle;D. Traversal from end to beginning,B,5
Q055,FillinTheBlank,HARD,Linked Lists,In C++ to insert a new node with data value 10 after a node named 'currentNode' in a singly linked list we use the syntax newNode->data = 10; newNode->next = ______; currentNode->next = newNode;,,currentNode->next,15
Q056,MultipleCorrect,INTERMEDIATE,Linked Lists,Which types of linked lists exist?,A. Singly linked list;B. Doubly linked list;C. Circular linked list;D. Linear linked list,A;B;C,10
Q057,MCQ,EASY,Linked Lists,Which statement is true about the tail of a singly linked list?,A. The tail points to the first node;B. The tail contains the data of the last node;C. The tail points to NULL;D. The tail points to a dummy node,C,5
Q058,TrueFalse,INTERMEDIATE,Linked Lists,In C++ a doubly linked list allows traversal in both directions forward and backward.,,TRUE,10
Q059,MCQ,EASY,Linked Lists,Which operations are typically slower in a linked list compared to an array?,A. Insertion at the beginning;B. Deletion from the middle;C. Random access of elements;D. Traversal from beginning to end,C,5
Q060,FillinTheBlank,HARD,Linked Lists,In C++ to delete the first node from a singly linked list we use the syntax ______ = head->next; delete head; head = temp;,,temp,15
Q061,MultipleCorrect,INTERMEDIATE,Linked Lists,Which are disadvantages of using linked lists in C++?,A. Linked lists require more memory compared to arrays;B. Linked lists do not support random access of elements;C. Linked lists are difficult to implement;D. Linked lists have a fixed size,A;B,10
Q062,MCQ,EASY,Linked Lists,Which statement is true about the head of a singly linked list?,A. The head points to the last node;B. The head contains the data of the first node;C. The head points to NULL;D. The head contains the data of the last node,B,5
Q063,TrueFalse,INTERMEDIATE,Linked Lists,In C++ a circular linked list always contains a cycle in its structure.,,TRUE,10
Q064,MCQ,EASY,Linked Lists,Which operations can be performed efficiently on a doubly linked list?,A. Traversal from beginning to end;B. Random access of elements;C. Insertion at the beginning;D. Deletion from the middle,D,5
Q065,FillinTheBlank,HARD,Linked Lists,In C++ to insert a new node with data value 20 before a node named 'currentNode' in a doubly linked list we use the syntax newNode->data = 20; newNode->next = ______; newNode->prev = ______; currentNode->prev->next = newNode;,,currentNode,15
Q066,MultipleCorrect,INTERMEDIATE,Linked Lists,Which are advantages of using doubly linked lists over singly linked lists in C++?,A. Doubly linked lists support traversal in both directions;B. Doubly linked lists allow constant-time access to the last node;C. Doubly linked lists have a smaller memory footprint;D. Doubly linked lists can be traversed only in one direction,A;B,10
Q067,MCQ,EASY,Stacks,Which statement is true about stacks?,A. Stacks follow the FIFO (First In First Out) principle;B. Stacks support random access of elements;C. Stacks allow insertion and deletion from both ends;D. Stacks follow the LIFO (Last In First Out) principle,D,5
Q068,FillinTheBlank,INTERMEDIATE,Stacks,In C++ to declare a stack of integers named 's' we use the syntax stack<int> ______;,,s,10
Q069,TrueFalse,INTERMEDIATE,Stacks,In C++ a stack can be implemented using arrays or linked lists.,,TRUE,10
Q070,MCQ,EASY,Stacks,Which operations can be performed efficiently on a stack?,A. Insertion at the middle;B. Deletion from the middle;C. Insertion at the top;D. Deletion from the bottom,C,5
Q071,FillinTheBlank,HARD,Stacks,In C++ to push an element with value 15 onto a stack named 's' we use the syntax s.______(15);,,push,15
Q072,MultipleCorrect,INTERMEDIATE,Stacks,Which are common applications of stacks?,A. Expression evaluation;B. Undo operations in text editors;C. Backtracking in algorithms;D. Sorting elements,A;B;C,10
Q073,MCQ,EASY,Stacks,Which statement is true about the top of a stack?,A. The top points to the last element of the stack;B. The top contains the data of the first element of the stack;C. The top points to NULL;D. The top contains the data of the last element of the stack,A,5
Q074,TrueFalse,INTERMEDIATE,Stacks,In C++ the pop operation removes the top element from the stack and returns it.,,TRUE,10
Q075,MCQ,EASY,Stacks,Which data structure is typically used to implement a stack in C++?,A. Linked list;B. Array;C. Queue;D. Tree,B,5
Q076,FillinTheBlank,HARD,Stacks,In C++ to pop an element from a stack named 's' we use the syntax ______ = s.top(); s.pop();,,temp,15
Q077,MultipleCorrect,INTERMEDIATE,Stacks,Which are disadvantages of using stacks in C++?,A. Stacks have a limited capacity;B. Stacks do not support random access of elements;C. Stacks cannot be implemented using arrays;D. Stacks can lead to stack overflow errors,A;B,10
Q078,MCQ,EASY,Queues,Which statement is true about queues?,A. Queues follow the LIFO (Last In First Out) principle;B. Queues support random access of elements;C. Queues allow insertion and deletion from both ends;D. Queues follow the FIFO (First In First Out) principle,D,5
Q079,FillinTheBlank,INTERMEDIATE,Queues,In C++ to declare a queue of characters named 'q' we use the syntax queue<char> ______;,,q,10
Q080,TrueFalse,INTERMEDIATE,Queues,In C++ a queue can be implemented using arrays or linked lists.,,TRUE,10
Q081,MCQ,EASY,Queues,Which operations can be performed efficiently on a queue?,A. Insertion at the middle;B. Deletion from the middle;C. Insertion at the rear;D. Deletion from the front,C,5
Q082,FillinTheBlank,HARD,Queues,In C++ to enqueue an element with value 25 onto a queue named 'q' we use the syntax q.______(25);,,push,15
Q083,MultipleCorrect,INTERMEDIATE,Queues,Which are common applications of queues?,A. Process scheduling;B. Breadth-first search;C. Expression evaluation;D. Depth-first search,A;B,10
Q084,MCQ,EASY,Queues,Which data structure is typically used to implement a queue in C++?,A. Linked list;B. Array;C. Stack;D. Tree,A,5
Q085,FillinTheBlank,HARD,Queues,In C++ to dequeue an element from a queue named 'q' we use the syntax ______ = q.front(); q.pop();,,temp,15
Q086,TrueFalse,INTERMEDIATE,Queues,In C++ the dequeue operation removes the rear element from the queue.,,FALSE,10
Q087,MCQ,EASY,Search Algorithms,Which is not a search algorithm?,A. Linear search;B. Binary search;C. Bubble sort;D. Depth-first search,C,5
Q088,FillinTheBlank,INTERMEDIATE,Search Algorithms,In C++ to implement binary search recursively we use the syntax int binarySearch(int arr[] int low int high int key) { if (low <= high) { int mid = (low + high) / 2; if (arr[mid] == key) return ______; else if (arr[mid] > key) return binarySearch(arr low mid - 1 key); else return binarySearch(arr mid + 1 high key); } return -1; },,mid,10
Q089,TrueFalse,INTERMEDIATE,Search Algorithms,In C++ binary search can only be applied to sorted arrays.,,TRUE,10
Q090,MCQ,EASY,Search Algorithms,Which statement is true about linear search?,A. Linear search requires the array to be sorted;B. Linear search has a time complexity of O(log n);C. Linear search is also known as binary search;D. Linear search has a time complexity of O(n),D,5
Q091,FillinTheBlank,HARD,Search Algorithms,In C++ to implement linear search iteratively we use the syntax int linearSearch(int arr[] int n int key) { for (int i = 0; i < n; ++i) { if (arr[i] == key) return ______; } return -1; },,i,15
Q092,MultipleCorrect,INTERMEDIATE,Search Algorithms,Which are advantages of binary search over linear search?,A. Binary search has a time complexity of O(log n);B. Binary search requires the array to be sorted;C. Binary search is faster for small arrays;D. Binary search is faster for large arrays,A;B,10
Q093,MCQ,EASY,Search Algorithms,Which statement is true about binary search?,A. Binary search has a time complexity of O(n);B. Binary search requires the array to be sorted;C. Binary search is always faster than linear search;D. Binary search is also known as sequential search,B,5
Q094,FillinTheBlank,HARD,Search Algorithms,In C++ to implement binary search iteratively we use the syntax int binarySearch(int arr[] int n int key) { int left = 0 right = n - 1; while (left <= right) { int mid = (left + right) / 2; if (arr[mid] == key) return ______; else if (arr[mid] < key) left = mid + 1; else right = mid - 1; } return -1; },,mid,15
Q095,TrueFalse,INTERMEDIATE,Search Algorithms,In C++ binary search can be applied to both sorted and unsorted arrays.,,FALSE,10
Q096,MCQ,EASY,Sorting Algorithms,Which is a comparison-based sorting algorithm?,A. Radix sort;B. Counting sort;C. Bucket sort;D. Quick sort,D,5
Q097,FillinTheBlank,INTERMEDIATE,Sorting Algorithms,In C++ to implement bubble sort we use the syntax void bubbleSort(int arr[] int n) { for (int i = 0; i < n-1; ++i) { for (int j = 0; j < n-i-1; ++j) { if (arr[j] > arr[j+1]) { ______; } } } },,swap(arr[j] arr[j+1]),10
Q098,TrueFalse,INTERMEDIATE,Sorting Algorithms,In C++ bubble sort is an example of a divide and conquer algorithm.,,FALSE,10
Q099,MCQ,EASY,Sorting Algorithms,Which sorting algorithm has the best average-case time complexity?,A. Bubble sort;B. Insertion sort;C. Quick sort;D. Selection sort,C,5
Q100,FillinTheBlank,HARD,Sorting Algorithms,In C++ to implement insertion sort we use the syntax void insertionSort(int arr[] int n) { for (int i = 1; i < n; ++i) { int key = arr[i]; int j = i - 1; while (j >= 0 && arr[j] > key) { arr[j + 1] = arr[j]; j--; } arr[j + 1] = ______; } },,key,15
Q101,MultipleCorrect,INTERMEDIATE,Sorting Algorithms,Which characteristics are true for quick sort?,A. Quick sort is a stable sorting algorithm;B. Quick sort has a worst-case time complexity of O(n^2);C. Quick sort uses divide and conquer strategy;D. Quick sort requires additional memory for sorting,A;C,10
Q102,MCQ,EASY,Sorting Algorithms,What is true about selection sort?,A. Selection sort has a time complexity of O(n^2);B. Selection sort is a stable sorting algorithm;C. Selection sort is an in-place sorting algorithm;D. Selection sort has a time complexity of O(n log n),A,5
Q103,TrueFalse,INTERMEDIATE,Sorting Algorithms,In C++ merge sort is an example of an in-place sorting algorithm.,,FALSE,10
Q104,MCQ,EASY,Sorting Algorithms,What is true about merge sort?,A. Merge sort has a time complexity of O(n^2);B. Merge sort is an in-place sorting algorithm;C. Merge sort is not a stable sorting algorithm;D. Merge sort uses divide and conquer strategy,D,5
Q105,FillinTheBlank,HARD,Sorting Algorithms,In C++ to implement merge sort we use the syntax void mergeSort(int arr[] int l int r) { if (l < r) { int m = (l + r) / 2; mergeSort(arr l m); mergeSort(arr m + 1 r); merge(arr l m r); } },,merge,15
Q106,MultipleCorrect,INTERMEDIATE,Sorting Algorithms,Which characteristics are true for insertion sort?,A. Insertion sort has a worst-case time complexity of O(n^2);B. Insertion sort is an adaptive sorting algorithm;C. Insertion sort is a stable sorting algorithm;D. Insertion sort is suitable for sorting small arrays,A;B;C,10
Q107,MCQ,EASY,Sorting Algorithms,What is true about radix sort?,A. Radix sort is a comparison-based sorting algorithm;B. Radix sort is not suitable for sorting integers;C. Radix sort uses the concept of buckets;D. Radix sort has a time complexity of O(n log n),C,5
Q108,FillinTheBlank,INTERMEDIATE,Sorting Algorithms,In C++ to implement quick sort we use the syntax void quickSort(int arr[] int low int high) { if (low < high) { int pi = partition(arr low high); quickSort(arr low pi - 1); quickSort(arr pi + 1 high); } },,pi,10
Q109,TrueFalse,INTERMEDIATE,Sorting Algorithms,In C++ heap sort is an example of a comparison-based sorting algorithm.,,TRUE,10
Q110,MCQ,EASY,Sorting Algorithms,Which statement is true about heap sort?,A. Heap sort is an adaptive sorting algorithm;B. Heap sort is not an in-place sorting algorithm;C. Heap sort has a worst-case time complexity of O(n^2);D. Heap sort requires additional memory for sorting,B,5
Q111,FillinTheBlank,HARD,Sorting Algorithms,In C++ to implement heap sort we use the syntax void heapSort(int arr[] int n) { buildMaxHeap(arr n); for (int i = n - 1; i > 0; --i) { ______; } },,swap(arr[0] arr[i]); swap(arr[0] arr[i]);,15
Q112,MultipleCorrect,INTERMEDIATE,Sorting Algorithms,Which characteristics are true for heap sort?,A. Heap sort has a worst-case time complexity of O(n log n);B. Heap sort is an in-place sorting algorithm;C. Heap sort is not a stable sorting algorithm;D. Heap sort uses the concept of binary heaps,A;B;C,10
Q113,MCQ,EASY,Recursion,What is recursion in C++?,A. A programming technique to optimize code;B. A function calling itself directly or indirectly;C. A way to declare variables inside functions;D. A method to avoid using loops,B,5
Q114,FillinTheBlank,INTERMEDIATE,Recursion,In C++ to implement factorial using recursion we use the syntax int factorial(int n) { if (n == 0 || n == 1) return ______; else return n * factorial(n - 1); },,1,10
Q115,TrueFalse,INTERMEDIATE,Recursion,In C++ every recursive function must have a base case to terminate the recursion.,,TRUE,10
Q116,MCQ,EASY,Recursion,What is the purpose of a base case in a recursive function?,A. To define the initial state of the function;B. To define the termination condition of the recursion;C. To optimize the performance of the function;D. To skip certain recursive calls,B,5
Q117,FillinTheBlank,HARD,Recursion,In C++ to implement Fibonacci series using recursion we use the syntax int fibonacci(int n) { if (n <= 1) return n; else return fibonacci(n - 1) + ______; },,fibonacci(n - 2),15
Q118,MultipleCorrect,INTERMEDIATE,Recursion,Which are advantages of using recursion in C++?,A. Simplifies code implementation;B. Reduces memory usage;C. Enhances code readability;D. Solves complex problems efficiently,A;C,10
Q119,MCQ,EASY,Recursion,In C++ what happens if the base case is not defined properly in a recursive function?,A. The program crashes;B. The function enters an infinite loop;C. The function returns an incorrect result;D. The function returns NULL,C,5
Q120,FillinTheBlank,INTERMEDIATE,Pointers,______ allows us to indirectly access and manipulate data by referring to its memory location.,,Pointers,10
Q121,TrueFalse,INTERMEDIATE,Recursion,In C++ recursive functions are always more memory-efficient than their iterative counterparts.,,FALSE,10
Q122,MCQ,EASY,Recursion,In C++ what is the maximum number of recursive calls that can be made before reaching the recursion limit?,A. 100;B. 1000;C. It depends on the compiler and system settings;D. There is no maximum limit,C,5
Q123,FillinTheBlank,HARD,Recursion,In C++ to calculate the power of a number using recursion we use the syntax int power(int base int exponent) { if (exponent == 0) return ______; else return base * power(base exponent - 1); },,1,15
Q124,MultipleCorrect,INTERMEDIATE,Recursion,Which are examples of problems that can be solved efficiently using recursion?,A. Tree traversal;B. Factorial calculation;C. Sorting arrays;D. Pathfinding in a maze,A;B;D,10
Q125,MCQ,EASY,Dynamic Programming,What is dynamic programming in C++?,A. A programming technique to optimize code;B. A way to allocate memory dynamically;C. A method to define classes with dynamic properties;D. A method to avoid using loops,A,5
Q126,FillinTheBlank,INTERMEDIATE,Dynamic Programming,In C++ to implement the Fibonacci series using dynamic programming we use the syntax int fibonacci(int n) { int fib[n+1]; fib[0] = 0; fib[1] = 1; for (int i = 2; i <= n; ++i) { fib[i] = fib[i-1] + fib[i-2]; } return fib[______]; },,n,10
Q127,TrueFalse,INTERMEDIATE,Dynamic Programming,In C++ dynamic programming can only be applied to problems that exhibit optimal substructure and overlapping subproblems.,,FALSE,10
Q128,MCQ,EASY,Dynamic Programming,What is memoization in dynamic programming?,A. Storing the results of expensive function calls and returning the cached result when the same inputs occur again;B. Allocating memory dynamically for variables;C. Performing arithmetic operations in a recursive manner;D. Optimizing the use of loops in a program,A,5
Q129,FillinTheBlank,HARD,Dynamic Programming,In C++ to implement the 0-1 knapsack problem using dynamic programming we use the syntax int knapsack(int W int wt[] int val[] int n) { int K[n+1][W+1]; for (int i = 0; i <= n; ++i) { for (int w = 0; w <= W; ++w) { if (i == 0 || w == 0) K[i][w] = 0; else if (wt[i-1] <= w) K[i][w] = max(val[i-1] + K[i-1][w-wt[i-1]] K[i-1][w]); else K[i][w] = K[i-1][w]; } } return K[______][W]; },,n,15
Q130,MultipleCorrect,INTERMEDIATE,Dynamic Programming,Which characteristics are true for dynamic programming?,A. Dynamic programming breaks down a problem into smaller subproblems;B. Dynamic programming relies on the principle of optimal substructure;C. Dynamic programming solves each subproblem only once and saves its answer in a table;D. Dynamic programming is suitable for problems with a greedy approach,A;B;C,10
Q131,MCQ,EASY,Dynamic Programming,What is the time complexity of dynamic programming algorithms generally?,A. O(1);B. O(log n);C. O(n);D. O(n^2),D,5
Q132,FillinTheBlank,INTERMEDIATE,Dynamic Programming,In C++ to implement the coin change problem using dynamic programming we use the syntax int coinChange(int coins[] int n int amount) { int dp[______+1]; dp[0] = 0; for (int i = 1; i <= amount; ++i) { dp[i] = INT_MAX; for (int j = 0; j < n; ++j) { if (coins[j] <= i && dp[i-coins[j]] != INT_MAX) { dp[i] = min(dp[i] 1 + dp[i-coins[j]]); } } } return dp[amount] == INT_MAX ? -1 : dp[amount]; },,amount,10
Q133,TrueFalse,INTERMEDIATE,Dynamic Programming,In C++ dynamic programming can only be applied to problems with a recursive structure.,,FALSE,10
Q134,MCQ,EASY,Dynamic Programming,What is the purpose of using dynamic programming?,A. To minimize memory usage in programs;B. To optimize the time complexity of algorithms;C. To allocate memory dynamically;D. To avoid using recursion in programs,B,5
Q135,FillinTheBlank,HARD,Dynamic Programming,Dynamic programming often involves using memoization or tabulation to store _______ results.,,intermediate,15
Q136,MultipleCorrect,INTERMEDIATE,Dynamic Programming,Which techniques are common in dynamic programming?,A. Memoization;B. Backtracking;C. Tabulation;D. Divide and conquer,A;C,10
Q137,MCQ,EASY,Dynamic Programming,What is tabulation in dynamic programming?,A. Storing the results of expensive function calls and returning the cached result when the same inputs occur again;B. Allocating memory dynamically for variables;C. Performing arithmetic operations in a recursive manner;D. Storing the results of subproblems in a table to avoid recomputation,D,5
Q138,FillinTheBlank,HARD,Dynamic Programming,In C++ to implement the longest increasing subsequence problem using dynamic programming we use the syntax int longestIncreasingSubsequence(int arr[] int n) { int lis[n]; lis[0] = 1; for (int i = 1; i < n; ++i) { lis[i] = 1; for (int j = 0; j < i; ++j) { if (arr[i] > arr[j] && lis[i] < lis[j] + 1) lis[i] = lis[j] + 1; } } return *______(lis lis + n); },,max_element,15
Q139,TrueFalse,INTERMEDIATE,Dynamic Programming,In C++ dynamic programming can only be applied to problems with a recursive solution.,,FALSE,10
Q140,MCQ,EASY,File Handling,Which statement is true about file handling in C++?,A. File handling is done using the <file> header file;B. File handling in C++ requires the use of third-party libraries;C. File handling is done using the <fstream> header file;D. File handling is not supported in C++,C,5
Q141,FillinTheBlank,INTERMEDIATE,File Handling,"In C++ to open a file named 'example.txt' in write mode we use the syntax ofstream outfile(""______"");",,example.txt,10
Q142,TrueFalse,INTERMEDIATE,File Handling,In C++ when opening a file in write mode if the file does not exist it will be created.,,TRUE,10
Q143,MCQ,EASY,File Handling,Which mode is used to open a file for reading and writing in C++?,A. ios::in;B. ios::out;C. ios::binary;D. ios::in | ios::out,D,5
Q144,FillinTheBlank,HARD,File Handling,In C++ to read from a file stream named 'infile' into a string variable named 'data' we use the syntax infile >> ______;,,data,15
Q145,MultipleCorrect,INTERMEDIATE,File Handling,Which are common file operations in C++?,A. Opening a file;B. Writing data to a file;C. Appending data to a file;D. Creating directories,A;B;C,10
Q146,MCQ,EASY,File Handling,Which statement is true about file streams in C++?,A. File streams must be closed explicitly using the close() function;B. File streams are automatically closed when the program terminates;C. File streams cannot be opened in multiple modes simultaneously;D. File streams are only used for reading from files,B,5
Q147,TrueFalse,INTERMEDIATE,File Handling,In C++ file streams can only be opened in either text mode or binary mode not both simultaneously.,,FALSE,10
Q148,MCQ,EASY,File Handling,Which statement is true about text files in C++?,A. Text files store data in binary format;B. Text files are not human-readable;C. Text files contain data in the form of characters;D. Text files cannot be manipulated using C++ file streams,C,5
Q149,FillinTheBlank,HARD,File Handling,In C++ to write a string variable named 'text' to a file stream named 'outfile' we use the syntax outfile << ______;,,text,15
Q150,MultipleCorrect,INTERMEDIATE,File Handling,Which are advantages of using file streams in C++ for file handling?,A. Platform independence;B. Simplified syntax;C. Low-level control over file operations;D. Automatic memory management,A;B,10
Q151,MCQ,EASY,Exception Handling,What is exception handling in C++?,A. A mechanism to handle runtime errors in programs;B. A way to handle compile-time errors in programs;C. A technique to optimize code execution;D. A method to avoid using loops in programs,A,5
Q152,FillinTheBlank,INTERMEDIATE,Exception Handling,_______ exceptions create errors that are not controllable by the program,,Asynchronous,10
Q153,TrueFalse,INTERMEDIATE,Exception Handling,In C++ a try block must be followed by at least one catch block.,,TRUE,10
Q154,MCQ,EASY,Exception Handling,Which statement is true about exceptions in C++?,A. Exceptions can only be thrown by the standard library functions;B. Exceptions must always be caught immediately where they are thrown;C. Exceptions cannot be rethrown in C++;D. Exceptions can be of any data type,A,5
Q155,FillinTheBlank,HARD,Exception Handling,"In C++ to throw an exception of type 'std::invalid_argument' with a message ""Invalid input"" we use the syntax throw ______(""Invalid input"");",,std::invalid_argument,15
Q156,MultipleCorrect,INTERMEDIATE,Exception Handling,Which are common standard exception classes in C++?,A. std::logic_error;B. std::runtime_error;C. std::overflow_error;D. std::range_error,A;B;C;D,10
Q157,MCQ,EASY,Exception Handling,What is the purpose of the 'finally' block in exception handling?,A. To catch exceptions that are not caught by preceding catch blocks;B. To execute code regardless of whether an exception is thrown or caught;C. To handle compile-time errors in programs;D. To avoid using loops in programs,B,5
Q158,TrueFalse,INTERMEDIATE,Exception Handling,In C++ a catch block can catch multiple types of exceptions by listing them all in a single catch statement.,,TRUE,10
Q159,MCQ,EASY,Exception Handling,Which statement is true about the 'throw' statement in C++?,A. The throw statement is used to catch exceptions;B. The throw statement is used to handle exceptions;C. The throw statement is used to resume normal execution after catching an exception;D. The throw statement is used to signal that an exceptional condition has occurred,D,5
Q160,FillinTheBlank,HARD,Exception Handling,Conditions responsible for creating errors during the execution of a program are known as ______.,,exceptions,15
Q161,MultipleCorrect,INTERMEDIATE,Exception Handling,Which are common practices for using exceptions in C++?,A. Using exceptions for flow control;B. Using exceptions for error handling;C. Catching exceptions at the lowest level possible;D. Throwing exceptions for all errors,A;C,10
Q162,MCQ,EASY,Exception Handling,What happens if an exception is thrown inside a catch block in C++?,A. The exception is caught by the enclosing try block;B. The program terminates abnormally;C. The exception is ignored;D. The program enters an infinite loop,B,5
Q163,FillinTheBlank,INTERMEDIATE,Exception Handling,In C++ to define a custom exception class named 'MyException' derived from 'std::exception' we use the syntax class MyException : public ______ { public: MyException(const char* message) : ______(message) {} },,std::exception,10
Q164,TrueFalse,INTERMEDIATE,Exception Handling,In C++ it is good practice to catch all exceptions using a catch block that catches all exception types by reference.,,TRUE,10
Q165,MCQ,EASY,Exception Handling,What is the primary purpose of exception propagation in C++?,A. To propagate errors to higher levels of the program for handling;B. To suppress errors and continue program execution;C. To propagate errors to lower levels of the program for handling;D. To avoid using loops in programs,A,5
Q166,FillinTheBlank,HARD,Exception Handling,"In C++ to define a function named 'divide' that throws an exception of type 'std::runtime_error' when attempting to divide by zero we use the syntax int divide(int a int b) { if (b == 0) throw (""Division by zero""); return a / b; }",,std::runtime_error,15
Q167,MultipleCorrect,INTERMEDIATE,Exception Handling,Which are guidelines for handling exceptions effectively in C++?,A. Catching exceptions by value;B. Catching exceptions by reference;C. Catching all exceptions using a catch-all block;D. Handling exceptions at the appropriate level of abstraction,B;D,10
Q168,MCQ,EASY,Exception Handling,What is the purpose of the 'std::exception' class in C++?,A. To define custom exception classes;B. To catch all exceptions;C. To provide a base class for all standard exception classes;D. To handle file input/output,C,5
Q169,FillinTheBlank,INTERMEDIATE,Exception Handling,In C++ to retrieve the error message associated with an exception object named 'ex' we use the syntax ex.(),,what(),10
Q170,TrueFalse,INTERMEDIATE,Exception Handling,In C++ it is recommended to use exceptions for handling expected errors only not for unexpected conditions.,,TRUE,10
Q171,MCQ,EASY,Data Structures,What is a data structure in C++?,A. A way to organize and store data for efficient access and modification;B. A way to allocate memory dynamically;C. A programming technique to optimize code execution;D. A method to avoid using loops in programs,A,5
Q172,FillinTheBlank,INTERMEDIATE,Data Structures,In C++ to declare an array of integers named 'arr' with size 10 we use the syntax int arr[______];,,10,10
Q173,TrueFalse,INTERMEDIATE,Data Structures,In C++ arrays can store elements of different data types simultaneously.,,FALSE,10
Q174,MCQ,EASY,Data Structures,Which is a linear data structure?,A. Tree;B. Graph;C. Queue;D. Hash table,C,5
Q175,FillinTheBlank,HARD,Data Structures,In C++ to declare a vector of strings named 'names' we use the syntax vector<string> ______;,,names,15
Q176,MultipleCorrect,INTERMEDIATE,Data Structures,Which are advantages of using linked lists in C++?,A. Linked lists have a fixed size;B. Linked lists support dynamic memory allocation;C. Linked lists allow constant-time access to any element;D. Linked lists support insertion and deletion operations at any position,B;D,10
Q177,MCQ,EASY,Data Structures,Which statement is true about stacks?,A. Stacks use the FIFO (First In First Out) principle;B. Stacks use the LIFO (Last In First Out) principle;C. Stacks allow random access of elements;D. Stacks have a dynamic size,B,5
Q178,FillinTheBlank,INTERMEDIATE,Data Structures,In C++ to declare a stack of floats named 's' we use the syntax stack<float> ______;,,s,10
Q179,TrueFalse,INTERMEDIATE,Data Structures,In C++ a stack can only be implemented using arrays.,,FALSE,10
Q180,MCQ,EASY,Data Structures,Which statement is true about queues?,A. Queues use the LIFO (Last In First Out) principle;B. Queues use the FIFO (First In First Out) principle;C. Queues allow random access of elements;D. Queues have a dynamic size,B,5
Q181,FillinTheBlank,HARD,Data Structures,In C++ to declare a queue of integers named 'q' we use the syntax queue<int> ______;,,q,15
Q182,MultipleCorrect,INTERMEDIATE,Data Structures,Which are common applications of trees in C++?,A. Representing hierarchical data;B. Searching for elements efficiently;C. Implementing file systems;D. Storing key-value pairs,A;B;C,10
Q183,MCQ,EASY,Data Structures,Which statement is true about trees?,A. Trees have a cyclic structure;B. Trees are always binary;C. Trees have a root node;D. Trees cannot have more than two children per node,C,5
Q184,FillinTheBlank,INTERMEDIATE,Data Structures,In C++ to declare a binary search tree of integers named 'bst' we use the syntax set<int> ;,,bst,10
Q185,TrueFalse,INTERMEDIATE,Data Structures,In C++ trees can only be traversed in a depth-first manner.,,FALSE,10
Q186,MCQ,EASY,Data Structures,Which statement is true about graphs?,A. Graphs cannot have cycles;B. Graphs can have at most one path between any two vertices;C. Graphs can be directed or undirected;D. Graphs are always acyclic,C,5
Q187,FillinTheBlank,HARD,Data Structures,In C++ to declare an adjacency list representation of a graph with integer vertices we use the syntax vector<int> adj[];,,V,15
Q188,MultipleCorrect,INTERMEDIATE,Data Structures,Which are common operations performed on graphs in C++?,A. Traversing the graph;B. Finding the shortest path;C. Sorting the vertices;D. Detecting cycles,A;B;D,10
Q189,MCQ,EASY,Data Structures,Which statement is true about hash tables?,A. Hash tables use linked lists to store elements;B. Hash tables guarantee the order of elements;C. Hash tables have constant-time access for all operations;D. Hash tables cannot handle collisions,A;C,5
Q190,FillinTheBlank,INTERMEDIATE,Data Structures,In C++ to declare a hash table mapping strings to integers named 'hashTable' we use the syntax unordered_map<string int> ______;,,hashTable,10
Q191,TrueFalse,INTERMEDIATE,Data Structures,In C++ a hash table can only store unique keys not duplicate keys.,,FALSE,10
Q192,MCQ,EASY,Data Structures,Which statement is true about heaps?,A. Heaps are unordered binary trees;B. Heaps use the FIFO (First In First Out) principle;C. Heaps are always balanced binary trees;D. Heaps are used to maintain the maximum or minimum element,B,5
Q193,FillinTheBlank,HARD,Data Structures,In C++ to declare a max-heap of integers named 'maxHeap' we use the syntax priority_queue<int> ______;,,maxHeap,15
Q194,MultipleCorrect,INTERMEDIATE,Data Structures,Which are common applications of heaps in C++?,A. Implementing priority queues;B. Sorting algorithms like heap sort;C. Implementing graph algorithms like Dijkstra's algorithm;D. Implementing hash tables,A;B;C,10
Q195,MCQ,EASY,Data Structures,Which statement is true about sets in C++?,A. Sets allow duplicate elements;B. Sets automatically sort their elements;C. Sets guarantee the order of elements;D. Sets use a hash table for storage,D,5
Q196,FillinTheBlank,INTERMEDIATE,Data Structures,In C++ to declare a set of strings named 's' we use the syntax set<string> ______;,,s,10
Q197,TrueFalse,INTERMEDIATE,Data Structures,In C++ a set can store elements of different data types simultaneously.,,FALSE,10
Q198,MCQ,EASY,Data Structures,Which statement is true about queues in C++?,A. Queues use the LIFO (Last In First Out) principle;B. Queues allow random access of elements;C. Queues have a dynamic size;D. Queues use the FIFO (First In First Out) principle,D,5
Q199,FillinTheBlank,HARD,Data Structures,In C++ to declare a priority queue of integers named 'pq' we use the syntax priority_queue<int> ______;,,pq,15
Q200,MultipleCorrect,INTERMEDIATE,Data Structures,Which are common applications of queues in C++?,A. Implementing breadth-first search;B. Implementing depth-first search;C. Implementing round-robin scheduling;D. Implementing binary search,A;C,10
Q201,MCQ,EASY,Data Structures,Which statement is true about vectors in C++?,A. Vectors have a fixed size;B. Vectors use a linked list for storage;C. Vectors allow dynamic resizing;D. Vectors automatically sort their elements,C,5
Q202,FillinTheBlank,INTERMEDIATE,Data Structures,In C++ to declare a vector of doubles named 'v' we use the syntax vector<double> ______;,,v,10
Q203,TrueFalse,INTERMEDIATE,Data Structures,In C++ a vector can only store elements of the same data type.,,FALSE,10
Q204,MCQ,EASY,Data Structures,Which statement is true about maps in C++?,A. Maps allow duplicate keys;B. Maps automatically sort their keys;C. Maps guarantee the order of keys;D. Maps use a hash table for storage,D,5
Q205,FillinTheBlank,HARD,Data Structures,In C++ to declare a map mapping strings to integers named 'm' we use the syntax map<string int> ______;,,m,10
Q206,MultipleCorrect,INTERMEDIATE,Data Structures,Which are common applications of maps in C++?,A. Implementing dictionaries;B. Implementing hash tables;C. Storing key-value pairs;D. Implementing priority queues,A;C,10
Q207,MCQ,EASY,Data Structures,Which statement is true about stacks in C++?,A. Stacks allow random access of elements;B. Stacks use the FIFO (First In First Out) principle;C. Stacks have a dynamic size;D. Stacks use the LIFO (Last In First Out) principle,D,5
Q208,FillinTheBlank,HARD,Data Structures,In C++ to declare a stack of characters named 'stackChar' we use the syntax stack<char> ______;,,stackChar,15
Q209,TrueFalse,INTERMEDIATE,Data Structures,In C++ a stack can store elements of different data types simultaneously.,,TRUE,10
Q210,MCQ,EASY,Data Structures,Which statement is true about linked lists in C++?,A. Linked lists allow constant-time access to any element;B. Linked lists use contiguous memory allocation;C. Linked lists support dynamic resizing;D. Linked lists do not support insertion and deletion operations,B,5
Q211,FillinTheBlank,INTERMEDIATE,Data Structures,In C++ to declare a singly linked list of integers named 'list' we use the syntax list<int> ______;,,list,10
Q212,TrueFalse,INTERMEDIATE,Data Structures,In C++ a linked list can only be singly linked not doubly linked.,,FALSE,10
Q213,MCQ,EASY,Data Structures,Which statement is true about doubly linked lists?,A. Doubly linked lists allow traversal in only one direction;B. Doubly linked lists use less memory compared to singly linked lists;C. Doubly linked lists have pointers to both the next and previous nodes;D. Doubly linked lists do not support insertion and deletion operations,C,5
Q214,FillinTheBlank,HARD,Data Structures,In C++ to declare a doubly linked list of characters named 'dll' we use the syntax list<char> ______;,,dll,15
Q215,MultipleCorrect,INTERMEDIATE,Data Structures,Which are common operations performed on linked lists in C++?,A. Traversing the list;B. Searching for an element;C. Inserting an element at the beginning;D. Sorting the list,A;B;C,10
Q216,MCQ,EASY,Data Structures,Which statement is true about hash sets in C++?,A. Hash sets allow duplicate elements;B. Hash sets automatically sort their elements;C. Hash sets guarantee the order of elements;D. Hash sets use a hash table for storage,D,5
Q217,FillinTheBlank,INTERMEDIATE,Data Structures,In C++ to declare a hash set of integers named 'hashSet' we use the syntax unordered_set<int> ______;,,hashSet,10
Q218,TrueFalse,INTERMEDIATE,Data Structures,In C++ a hash set can store elements of different data types simultaneously.,,FALSE,10
Q219,MCQ,EASY,Data Structures,Which statement is true about hash maps in C++?,A. Hash maps allow duplicate keys;B. Hash maps automatically sort their keys;C. Hash maps guarantee the order of keys;D. Hash maps use a hash table for storage,D,5
Q220,FillinTheBlank,HARD,Data Structures,In C++ to declare a hash map mapping strings to integers named 'hashMap' we use the syntax unordered_map<string int> ______;,,hashMap,10
